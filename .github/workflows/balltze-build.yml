name: Balltze build
on:
  push:
    tags:
      - '*'
    branches:
      - '**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      balltze_version: ${{ steps.version.outputs.balltze_version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get current Balltze version
        id: version
        run: |
          VERSION=$(git describe --tags --exact-match 2>/dev/null || echo "")
          if [ -z "$VERSION" ]; then
            VERSION=r$(git rev-parse --short HEAD)
          fi
          echo "balltze_version=$VERSION" >> $GITHUB_OUTPUT
          echo "balltze_version=$VERSION" >> $GITHUB_ENV

      - name: Build Balltze
        run: docker compose run --rm build-release

      - name: Prepare build dist
        run: |
          ./bin/prepare-release.sh
          ./bin/prepare-cpp-library.sh
          ./bin/prepare-lua-library.sh

      - name: Upload build artifact
        if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: build-dist-${{ env.balltze_version }}
          path: dist/

  upload-release-artifact:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
    needs: build
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-dist-${{ needs.build.outputs.balltze_version }}
          path: dist/

      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: balltze-${{ needs.build.outputs.balltze_version }}
          path: dist/release/

  update-cpp-library:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
    needs: build
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-dist-${{ needs.build.outputs.balltze_version }}
          path: dist

      - name: Clone repository
        run: git clone https://x-access-token:${{ secrets.CPPLIB_REPO_TOKEN }}@github.com/mangofizz/balltze-cpplib.git balltze-cpplib

      - name: Update C++ library
        working-directory: balltze-cpplib
        run: |
          git rm -rf . --ignore-unmatch
          cp -r ../dist/cpplib/* .
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          git commit -m "Update library to Balltze ${{ needs.build.outputs.balltze_version }}"
          git push
        
  update-lua-library:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
    needs: build
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-dist-${{ needs.build.outputs.balltze_version }}
          path: dist

      - name: Clone repository
        run: git clone https://x-access-token:${{ secrets.LUALIB_REPO_TOKEN }}@github.com/mangofizz/balltze-lualib.git balltze-lualib
          
      - name: Update Lua library
        working-directory: balltze-lualib
        run: |
          git rm -rf . --ignore-unmatch
          cp -r ../dist/lualib/* .
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          git commit -m "Update library to Balltze ${{ needs.build.outputs.balltze_version }}"
          git push

  cleanup:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
    needs: [build, upload-release-artifact, update-cpp-library, update-lua-library]
    steps:
      - name: Delete temporary artifact
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARTIFACT_NAME: build-dist-${{ needs.build.outputs.balltze_version }}
        run: |
          ARTIFACT_ID=$(gh api repos/${{ github.repository }}/actions/artifacts |
          jq ".artifacts[] | select(.name == \"$ARTIFACT_NAME\") | .id")
          if [ -n "$ARTIFACT_ID" ]; then
            gh api -X DELETE repos/${{ github.repository }}/actions/artifacts/$ARTIFACT_ID
          fi

  update-cpp-plugin-template:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
    needs: [update-cpp-library]
    steps:
      - name: Clone repository
        run: git clone https://x-access-token:${{ secrets.CPPLIB_REPO_TOKEN }}@github.com/mangofizz/balltze-plugin-cpp.git balltze-plugin-cpp

      - name: Update C++ plugin template
        working-directory: balltze-plugin-cpp
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git submodule update --init --recursive
          git submodule foreach git pull origin master
          git add balltze-lib
          git commit -m "Update library to latest version"
          git push

  update-lua-plugin-template:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
    needs: [update-lua-library]
    steps:
      - name: Clone repository
        run: git clone https://x-access-token:${{ secrets.LUALIB_REPO_TOKEN }}@github.com/mangofizz/balltze-plugin-lua.git balltze-plugin-lua

      - name: Update Lua plugin template
        working-directory: balltze-plugin-lua
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git submodule update --init --recursive
          git submodule foreach git pull origin v2
          git add balltze-lib
          git commit -m "Update library to latest version"
          git push
